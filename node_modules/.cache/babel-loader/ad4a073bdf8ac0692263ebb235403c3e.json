{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/gitCloneData/eBookStoreUi/src/component/adminLogin/SignUpForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\n\nconst emailRegex = RegExp(\"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\");\nconst mobileRegex = RegExp(\"^[0-9]{2}\\\\s[0-9]{10}$\");\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignUpForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let target = e.target;\n      let value = target.type === \"checkbox\" ? target.checked : target.value;\n      const {\n        name\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"EMAIL\":\n          formErrors.EMAIL = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"PASSWORD\":\n          formErrors.PASSWORD = value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n          break;\n\n        case \"NAME\":\n          formErrors.NAME = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"CONTACT\":\n          formErrors.CONTACT = mobileRegex.test(value) ? \"\" : \"minimum 10 characaters required\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      NAME: null,\n      CONTACT: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\",\n        NAME: \"\",\n        CONTACT: \"\",\n        hasAgreed: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // handleChange(e) {\n  //     let target = e.target;\n  //     let value = target.type === 'checkbox' ? target.checked : target.value;\n  //     let name = target.name;\n  //     this.setState({\n  //       [name]: value\n  //     });\n  // }\n\n\n  getFullName(event) {\n    this.setState({\n      NAME: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      console.log(`\n          --SUBMITTING--\n          First Name: ${this.state.NAME}\n          Email: ${this.state.EMAIL}\n          Password: ${this.state.PASSWORD}\n          contact:${this.state.CONTACT}\n        `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n\n    console.log(\"The form was submitted with the following data:\");\n    console.log(this.state);\n    var data = {\n      NAME: this.state.NAME,\n      EMAIL: this.state.EMAIL,\n      PASSWORD: this.state.PASSWORD,\n      CONTACT: this.state.CONTACT\n    };\n    APIcall.adminDetails(data).then(res => {\n      console.log(res);\n    });\n  } // getAdminDetails(){\n  //   // var data = {\n  //   //   NAME: this.state.NAME,\n  //   //   EMAIL: this.state.EMAIL,\n  //   //   PASSWORD: this.state.PASSWORD,\n  //   //   CONTACT: this.state.CONTACT\n  //   // }\n  //   // APIcall.adminDetails(data)\n  //   // .then(res =>{\n  //   //   console.log(res);\n  //   // })\n  // }\n\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    console.log(this.state.NAME);\n    console.log(this.state.PASSWORD);\n    return React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"FormFields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"white\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      type: \"text\",\n      className: formErrors.NAME.length > 0 ? \"error\" : null,\n      placeholder: \"Enter your full name\",\n      name: \"NAME\",\n      value: this.state.NAME,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, formErrors.NAME.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, formErrors.NAME))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"white\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.PASSWORD.length > 0 ? \"error\" : null,\n      type: \"t\",\n      id: \"password\",\n      placeholder: \"Enter your password\",\n      name: \"PASSWORD\",\n      value: this.state.PASSWORD,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"white\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.EMAIL.length > 0 ? \"error\" : null,\n      type: \"text\",\n      id: \"email\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter your email\",\n      name: \"EMAIL\",\n      value: this.state.EMAIL,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, formErrors.EMAIL.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, formErrors.EMAIL))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"phone_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"phome_number\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter phone number\",\n      name: \"CONTACT\",\n      value: this.state.CONTACT,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__CheckboxLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"FormField__Checkbox\",\n      type: \"checkbox\",\n      name: \"hasAgreed\",\n      value: this.state.hasAgreed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), \" \", \"I agree all statements in\", \" \", React.createElement(\"a\", {\n      href: \"\",\n      className: \"FormField__TermsLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"terms of service\"))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      onChange: this.getAdminDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Sign Up\"), \" \", React.createElement(Link, {\n      to: \"/sign-in\",\n      className: \"FormField__Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"I'm already member\"))));\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/admin1/Desktop/gitCloneData/eBookStoreUi/src/component/adminLogin/SignUpForm.jsx"],"names":["React","Component","Link","APIcall","require","emailRegex","RegExp","mobileRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignUpForm","constructor","handleChange","e","preventDefault","target","value","type","checked","name","state","EMAIL","test","PASSWORD","NAME","CONTACT","setState","console","log","hasAgreed","bind","handleSubmit","getFullName","event","error","data","adminDetails","then","res","render","width","backgroundColor","border","color","outline","borderBottom","fontSize","fontWeight","paddingBottom","marginTop","getAdminDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,uCAAD,CAArB;;AAEA,MAAMC,UAAU,GAAGC,MAAM,CACvB,0GADuB,CAAzB;AAGA,MAAMC,WAAW,GAAGD,MAAM,CAAC,wBAAD,CAA1B;;AACA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAC7C,MAAIC,KAAK,GAAG,IAAZ,CAD6C,CAE7C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,OAA1B,CAAkCC,GAAG,IAAI;AACvCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B;AACD,GAFD,EAH6C,CAO7C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,GAAG,IAAI;AACjCA,IAAAA,GAAG,KAAK,IAAR,KAAiBJ,KAAK,GAAG,KAAzB;AACD,GAFD;AAGA,SAAOA,KAAP;AACD,CAZD;;AAcA,MAAMM,UAAN,SAAyBhB,SAAzB,CAAmC;AACjCiB,EAAAA,WAAW,GAAG;AACZ;;AADY,SA4BdC,YA5Bc,GA4BCC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,MAAM,GAAGF,CAAC,CAACE,MAAf;AACA,UAAIC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAjE;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAWN,CAAC,CAACE,MAAnB;AACA,UAAIb,UAAU,GAAG,EAAE,GAAG,KAAKkB,KAAL,CAAWlB;AAAhB,OAAjB;;AAEA,cAAQiB,IAAR;AACE,aAAK,OAAL;AACEjB,UAAAA,UAAU,CAACmB,KAAX,GAAmBvB,UAAU,CAACwB,IAAX,CAAgBN,KAAhB,IACf,EADe,GAEf,uBAFJ;AAGA;;AACF,aAAK,UAAL;AACEd,UAAAA,UAAU,CAACqB,QAAX,GACEP,KAAK,CAACP,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF,aAAK,MAAL;AACEP,UAAAA,UAAU,CAACsB,IAAX,GACER,KAAK,CAACP,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF,aAAK,SAAL;AACEP,UAAAA,UAAU,CAACuB,OAAX,GAAqBzB,WAAW,CAACsB,IAAZ,CAAiBN,KAAjB,IACjB,EADiB,GAEjB,iCAFJ;AAGA;;AACF;AACE;AApBJ;;AAuBA,WAAKU,QAAL,CAAc;AAAExB,QAAAA,UAAF;AAAc,SAACiB,IAAD,GAAQH;AAAtB,OAAd,EAA6C,MAAMW,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CAAnD;AACD,KA3Da;;AAEZ,SAAKA,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXE,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXC,MAAAA,OAAO,EAAE,IAJE;AAKXvB,MAAAA,UAAU,EAAE;AACVmB,QAAAA,KAAK,EAAE,EADG;AAEVE,QAAAA,QAAQ,EAAE,EAFA;AAGVC,QAAAA,IAAI,EAAE,EAHI;AAIVC,QAAAA,OAAO,EAAE,EAJC;AAKVI,QAAAA,SAAS,EAAE;AALD;AALD,KAAb;AAaA,SAAKjB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD,GAlBgC,CAoBjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAkCAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKP,QAAL,CAAc;AAAEF,MAAAA,IAAI,EAAES,KAAK,CAAClB,MAAN,CAAaC;AAArB,KAAd;AACD;;AAEDe,EAAAA,YAAY,CAAClB,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIb,SAAS,CAAC,KAAKmB,KAAN,CAAb,EAA2B;AACzBO,MAAAA,OAAO,CAACC,GAAR,CAAa;;wBAEK,KAAKR,KAAL,CAAWI,IAAK;mBACrB,KAAKJ,KAAL,CAAWC,KAAM;sBACd,KAAKD,KAAL,CAAWG,QAAS;oBACtB,KAAKH,KAAL,CAAWK,OAAQ;SALjC;AAOD,KARD,MAQO;AACLE,MAAAA,OAAO,CAACO,KAAR,CAAc,sCAAd;AACD;;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,QAAIe,IAAI,GAAG;AACTX,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IADR;AAETH,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFT;AAGTE,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAHZ;AAITE,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAJX,KAAX;AAMA7B,IAAAA,OAAO,CAACwC,YAAR,CAAqBD,IAArB,EAA2BE,IAA3B,CAAgCC,GAAG,IAAI;AACrCX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,KAFD;AAGD,GA1FgC,CA2FjC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErC,MAAAA;AAAF,QAAiB,KAAKkB,KAA5B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,IAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWG,QAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE;AACG,MAAA,KAAK,EAAE;AACNS,QAAAA,KAAK,EAAE,KADD;AAENC,QAAAA,eAAe,EAAE,aAFX;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,KAAK,EAAE,OAJD;AAKNC,QAAAA,OAAO,EAAE,MALH;AAMNC,QAAAA,YAAY,EAAE,mBANR;AAONC,QAAAA,QAAQ,EAAE,KAPJ;AAQNC,QAAAA,UAAU,EAAE,KARN;AASNC,QAAAA,aAAa,EAAE,MATT;AAUNC,QAAAA,SAAS,EAAE;AAVL,OADV;AAaE,MAAA,IAAI,EAAC,MAbP;AAcE,MAAA,SAAS,EAAE/C,UAAU,CAACsB,IAAX,CAAgBf,MAAhB,GAAyB,CAAzB,GAA6B,OAA7B,GAAuC,IAdpD;AAeE,MAAA,WAAW,EAAC,sBAfd;AAgBE,MAAA,IAAI,EAAC,MAhBP;AAiBE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWI,IAjBpB;AAkBE,MAAA,QAAQ,EAAE,KAAKZ,YAlBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAwBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCV,UAAU,CAACsB,IAAX,CAAgBf,MAAhB,GAAyB,CAAzB,IAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,UAAU,CAACsB,IAAlB,CAD/B,CAxBJ,CADF,EA6BE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AACI,MAAA,KAAK,EAAE;AACLgB,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,eAAe,EAAE,aAFZ;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,OAAO,EAAE,MALJ;AAMLC,QAAAA,YAAY,EAAE,mBANT;AAOLC,QAAAA,QAAQ,EAAE,KAPL;AAQLC,QAAAA,UAAU,EAAE,KARP;AASLC,QAAAA,aAAa,EAAE,MATV;AAULC,QAAAA,SAAS,EAAE;AAVN,OADX;AAaI,MAAA,SAAS,EAAE/C,UAAU,CAACqB,QAAX,CAAoBd,MAApB,GAA6B,CAA7B,GAAiC,OAAjC,GAA2C,IAb1D;AAcE,MAAA,IAAI,EAAC,GAdP;AAeE,MAAA,EAAE,EAAC,UAfL;AAgBE,MAAA,WAAW,EAAC,qBAhBd;AAiBE,MAAA,IAAI,EAAC,UAjBP;AAkBE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWG,QAlBpB;AAmBE,MAAA,QAAQ,EAAE,KAAKX,YAnBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CA7BF,EAuDE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE;AACA,MAAA,KAAK,EAAE;AACL4B,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,eAAe,EAAE,aAFZ;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,OAAO,EAAE,MALJ;AAMLC,QAAAA,YAAY,EAAE,mBANT;AAOLC,QAAAA,QAAQ,EAAE,KAPL;AAQLC,QAAAA,UAAU,EAAE,KARP;AASLC,QAAAA,aAAa,EAAE,MATV;AAULC,QAAAA,SAAS,EAAE;AAVN,OADP;AAaA,MAAA,SAAS,EAAE/C,UAAU,CAACmB,KAAX,CAAiBZ,MAAjB,GAA0B,CAA1B,GAA8B,OAA9B,GAAwC,IAbnD;AAcE,MAAA,IAAI,EAAC,MAdP;AAeE,MAAA,EAAE,EAAC,OAfL;AAgBE,MAAA,SAAS,EAAC,kBAhBZ;AAiBE,MAAA,WAAW,EAAC,kBAjBd;AAkBE,MAAA,IAAI,EAAC,OAlBP;AAmBE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,KAnBpB;AAoBE,MAAA,QAAQ,EAAE,KAAKT,YApBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EA0BI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCV,UAAU,CAACmB,KAAX,CAAiBZ,MAAjB,GAA0B,CAA1B,IAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,UAAU,CAACmB,KAAlB,CADhC,CA1BJ,CAvDF,EAqFE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,SAAS,EAAC,kBAHZ;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWK,OANpB;AAOE,MAAA,QAAQ,EAAE,KAAKb,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CArFF,EAmGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWS,SAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKjB,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOK,GAPL,+BAQ4B,GAR5B,EASE;AAAG,MAAA,IAAI,EAAC,EAAR;AAAW,MAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF,CADF,CAnGF,EAmHE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,QAAQ,EAAE,KAAKsC,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAMY,GANZ,EAOE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,SAAS,EAAC,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,CAnHF,CADF,CADF;AAmID;;AAjPgC;;AAoPnC,eAAexC,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\n\nconst emailRegex = RegExp(\n  \"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\"\n);\nconst mobileRegex = RegExp(\"^[0-9]{2}\\\\s[0-9]{10}$\");\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignUpForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      NAME: null,\n      CONTACT: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\",\n        NAME: \"\",\n        CONTACT: \"\",\n        hasAgreed: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handleChange(e) {\n  //     let target = e.target;\n  //     let value = target.type === 'checkbox' ? target.checked : target.value;\n  //     let name = target.name;\n\n  //     this.setState({\n  //       [name]: value\n  //     });\n  // }\n  handleChange = e => {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"PASSWORD\":\n        formErrors.PASSWORD =\n          value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n      case \"NAME\":\n        formErrors.NAME =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"CONTACT\":\n        formErrors.CONTACT = mobileRegex.test(value)\n          ? \"\"\n          : \"minimum 10 characaters required\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  getFullName(event) {\n    this.setState({ NAME: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      console.log(`\n          --SUBMITTING--\n          First Name: ${this.state.NAME}\n          Email: ${this.state.EMAIL}\n          Password: ${this.state.PASSWORD}\n          contact:${this.state.CONTACT}\n        `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n    console.log(\"The form was submitted with the following data:\");\n    console.log(this.state);\n    var data = {\n      NAME: this.state.NAME,\n      EMAIL: this.state.EMAIL,\n      PASSWORD: this.state.PASSWORD,\n      CONTACT: this.state.CONTACT\n    };\n    APIcall.adminDetails(data).then(res => {\n      console.log(res);\n    });\n  }\n  // getAdminDetails(){\n  //   // var data = {\n  //   //   NAME: this.state.NAME,\n  //   //   EMAIL: this.state.EMAIL,\n  //   //   PASSWORD: this.state.PASSWORD,\n  //   //   CONTACT: this.state.CONTACT\n\n  //   // }\n  //   // APIcall.adminDetails(data)\n  //   // .then(res =>{\n  //   //   console.log(res);\n  //   // })\n  // }\n\n  render() {\n    const { formErrors } = this.state;\n    console.log(this.state.NAME);\n    console.log(this.state.PASSWORD);\n\n    return (\n      <div className=\"FormCenter\">\n        <form onSubmit={this.handleSubmit} className=\"FormFields\">\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"name\">\n              Full Name\n            </label>\n            <input\n               style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"white\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              type=\"text\"\n              className={formErrors.NAME.length > 0 ? \"error\" : null}\n              placeholder=\"Enter your full name\"\n              name=\"NAME\"\n              value={this.state.NAME}\n              onChange={this.handleChange}\n            />\n              <div className=\"errorMessage\">\n              {formErrors.NAME.length > 0 && <span>{formErrors.NAME}</span>}\n            </div>\n          </div>\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n                style={{\n                  width: \"40%\",\n                  backgroundColor: \"transparent\",\n                  border: \"none\",\n                  color: \"white\",\n                  outline: \"none\",\n                  borderBottom: \"1px solid #445366\",\n                  fontSize: \"1em\",\n                  fontWeight: \"300\",\n                  paddingBottom: \"10px\",\n                  marginTop: \"10px\"\n                }}\n                className={formErrors.PASSWORD.length > 0 ? \"error\" : null}\n              type=\"t\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              name=\"PASSWORD\"\n              value={this.state.PASSWORD}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"email\">\n              E-Mail Address\n            </label>\n            <input\n            style={{\n              width: \"40%\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              color: \"white\",\n              outline: \"none\",\n              borderBottom: \"1px solid #445366\",\n              fontSize: \"1em\",\n              fontWeight: \"300\",\n              paddingBottom: \"10px\",\n              marginTop: \"10px\"\n            }}\n            className={formErrors.EMAIL.length > 0 ? \"error\" : null}\n              type=\"text\"\n              id=\"email\"\n              className=\"FormField__Input\"\n              placeholder=\"Enter your email\"\n              name=\"EMAIL\"\n              value={this.state.EMAIL}\n              onChange={this.handleChange}\n            />\n              <div className=\"errorMessage\">\n              {formErrors.EMAIL.length > 0 && <span>{formErrors.EMAIL}</span>}\n            </div>\n          </div>\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"phone_number\">\n              Phone Number\n            </label>\n            <input\n              type=\"text\"\n              id=\"phome_number\"\n              className=\"FormField__Input\"\n              placeholder=\"Enter phone number\"\n              name=\"CONTACT\"\n              value={this.state.CONTACT}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"FormField\">\n            <label className=\"FormField__CheckboxLabel\">\n              <input\n                className=\"FormField__Checkbox\"\n                type=\"checkbox\"\n                name=\"hasAgreed\"\n                value={this.state.hasAgreed}\n                onChange={this.handleChange}\n              />{\" \"}\n              I agree all statements in{\" \"}\n              <a href=\"\" className=\"FormField__TermsLink\">\n                terms of service\n              </a>\n            </label>\n          </div>\n\n          <div className=\"FormField\">\n            <button\n              className=\"FormField__Button mr-20\"\n              onChange={this.getAdminDetails}\n            >\n              Sign Up\n            </button>{\" \"}\n            <Link to=\"/sign-in\" className=\"FormField__Link\">\n              I'm already member\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}