{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/eBookBoth/eBookStoreUi/src/component/adminLogin/SignInForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\n\nconst emailRegex = RegExp(\"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\");\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super(); // this.state = {\n    //   EMAIL: '',\n    //   PASSWORD: ''\n    // };\n\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //   let target = e.target;\n    //   let value = target.type === \"checkbox\" ? target.checked : target.value;\n    //   let name = target.name;\n    //   this.setState({\n    //     [name]: value\n    //   });\n    // }\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value; // let name = target.name;\n\n    const {\n      name\n    } = e.target;\n    let formErrors = { ...this.state.formErrors\n    };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"PASSWORD\":\n        formErrors.PASSWORD = value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n\n    var adminData = {\n      EMAIL: this.state.EMAIL,\n      PASSWORD: this.state.PASSWORD\n    };\n    APIcall.getLogin(adminData).then(res => {\n      console.log(\"responce comming from  getLogin\", res);\n    }); // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n  } // login(){\n  //   console.log('gone to login');\n  //   // var data = {\n  //   //   EMAIL: this.state.EMAIL,\n  //   //   PASSWORD: this.state.PASSWORD\n  //   // }\n  //   // APIcall.getLogin(data)\n  //   // .then(res =>{\n  //   //   console.log(res);\n  //   // })\n  // }\n\n\n  render() {\n    console.log(this.state.EMAIL);\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"FormFields\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"white\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.EMAIL.length > 0 ? \"error\" : null,\n      type: \"text\" // id=\"email\"\n      // className=\"FormField__Input\"\n      ,\n      placeholder: \"Enter your email\",\n      name: \"EMAIL\",\n      value: this.state.EMAIL,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, formErrors.EMAIL.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, formErrors.EMAIL))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      style: {\n        width: \"40%\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"white\",\n        outline: \"none\",\n        borderBottom: \"1px solid #445366\",\n        fontSize: \"1em\",\n        fontWeight: \"300\",\n        paddingBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      className: formErrors.PASSWORD.length > 0 ? \"error\" : null,\n      type: \"password\" // className=\"FormField__Input\"\n      ,\n      placeholder: \"Enter your password\",\n      name: \"PASSWORD\",\n      value: this.state.PASSWORD,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, formErrors.PASSWORD.length > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, formErrors.PASSWORD))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Sign In\"), \" \", React.createElement(Link, {\n      to: \"/\",\n      className: \"FormField__Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Create an account\"))));\n  }\n\n}\n\nexport default SignInForm;","map":{"version":3,"sources":["/home/admin1/Desktop/eBookBoth/eBookStoreUi/src/component/adminLogin/SignInForm.jsx"],"names":["React","Component","Link","APIcall","require","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignInForm","constructor","state","EMAIL","PASSWORD","handleChange","bind","handleSubmit","e","preventDefault","target","value","type","checked","name","test","setState","console","log","error","adminData","getLogin","then","res","render","width","backgroundColor","border","color","outline","borderBottom","fontSize","fontWeight","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\nconst emailRegex = RegExp(\n  \"^[a-zA-Z0-9]([._+-]{0,1}[a-zA-Z0-9])*[@]{1}[a-zA-Z0-9]{1,}[.]{1}[a-zA-Z]{2,3}([.]{1}[a-zA-Z]{2,3}){0,1}$\"\n);\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n\n    // this.state = {\n    //   EMAIL: '',\n    //   PASSWORD: ''\n    // };\n    this.state = {\n      EMAIL: null,\n      PASSWORD: null,\n      formErrors: {\n        EMAIL: \"\",\n        PASSWORD: \"\"\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //   let target = e.target;\n    //   let value = target.type === \"checkbox\" ? target.checked : target.value;\n    //   let name = target.name;\n\n    //   this.setState({\n    //     [name]: value\n    //   });\n    // }\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    // let name = target.name;\n    const { name } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"EMAIL\":\n        formErrors.EMAIL = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"PASSWORD\":\n        formErrors.PASSWORD =\n          value.length < 8 ? \"minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Email: ${this.state.EMAIL}\n        Password: ${this.state.PASSWORD}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n    var adminData = {\n      EMAIL: this.state.EMAIL,\n      PASSWORD: this.state.PASSWORD\n    };\n    APIcall.getLogin(adminData).then(res => {\n      console.log(\"responce comming from  getLogin\", res);\n    });\n\n    // console.log(\"The form was submitted with the following data:\");\n    // console.log(this.state);\n  }\n\n  // login(){\n  //   console.log('gone to login');\n\n  //   // var data = {\n  //   //   EMAIL: this.state.EMAIL,\n  //   //   PASSWORD: this.state.PASSWORD\n  //   // }\n  //   // APIcall.getLogin(data)\n  //   // .then(res =>{\n  //   //   console.log(res);\n  //   // })\n  // }\n\n  render() {\n    console.log(this.state.EMAIL);\n    const { formErrors } = this.state;\n    return (\n      <div className=\"FormCenter\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"FormFields\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"email\">\n              E-Mail Address\n            </label>\n            <input\n             style={{\n              width: \"40%\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              color: \"white\",\n              outline: \"none\",\n              borderBottom: \"1px solid #445366\",\n              fontSize: \"1em\",\n              fontWeight: \"300\",\n              paddingBottom: \"10px\",\n              marginTop: \"10px\"\n            }}\n            className={formErrors.EMAIL.length > 0 ? \"error\" : null}\n             type=\"text\"\n              // id=\"email\"\n              // className=\"FormField__Input\"\n              placeholder=\"Enter your email\"\n              name=\"EMAIL\"\n              value={this.state.EMAIL}\n              onChange={this.handleChange}\n            />\n             <div className=\"errorMessage\">\n            {formErrors.EMAIL.length > 0 && (\n              <span >{formErrors.EMAIL}</span>\n            )}</div>\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              style={{\n                width: \"40%\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                color: \"white\",\n                outline: \"none\",\n                borderBottom: \"1px solid #445366\",\n                fontSize: \"1em\",\n                fontWeight: \"300\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\"\n              }}\n              className={formErrors.PASSWORD.length > 0 ? \"error\" : null}\n              type=\"password\"\n              // className=\"FormField__Input\"\n              placeholder=\"Enter your password\"\n              name=\"PASSWORD\"\n              value={this.state.PASSWORD}\n              onChange={this.handleChange}\n            />\n             <div className=\"errorMessage\">\n            {formErrors.PASSWORD.length > 0 && (\n              <span >{formErrors.PASSWORD}</span>\n            )}</div>\n          </div>\n\n          <div className=\"FormField\">\n            <button className=\"FormField__Button mr-20\">Sign In</button>{\" \"}\n            <Link to=\"/\" className=\"FormField__Link\">\n              Create an account\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}